<Page x:Class="Reflection.Views.PageMain"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Reflection.Views"
      mc:Ignorable="d" 
      d:DesignHeight="350" d:DesignWidth="750"
      Title="PageMain">
    <Page.Resources>
        <!--TextBox-->
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="2" BorderBrush="Black" BorderThickness="1" Background="White">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" Content="Search here" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" FontFamily="Arial" FontSize="12" FontStyle="Italic"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="DarkGray"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Foreground" Value="Blue" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Text" Value="Search here"/>
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Circular button-->
        <Style x:Key="MyFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid Margin="8">
                            <Ellipse
                    Name="r1"
                    Stroke="Black"
                    StrokeDashArray="2 2"
                    StrokeThickness="1"/>
                            <Border
                    Name="border"
                    Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}"
                    BorderThickness="1"
                    CornerRadius="2"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CircleButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
            <Setter Property="Background" Value="#FF6DB4EF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}"/>
                            <Ellipse>
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.88" Color="#00000000"/>
                                        <GradientStop Offset="1" Color="#80000000"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse Margin="10" x:Name="highlightCircle" >
                                <Ellipse.Fill >
                                    <LinearGradientBrush >
                                        <GradientStop Offset="0" Color="#50FFFFFF"/>
                                        <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                        <GradientStop Offset="1" Color="#50FFFFFF"/>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="highlightCircle" Property="Fill">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                            <GradientStop Offset="0" Color="#50FFFFFF"/>
                                            <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                            <GradientStop Offset="1" Color="#50FFFFFF"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="content" Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="0.5" X="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Progress bar-->
        <local:DoubleToPctConverter x:Key="dblToPct"/>
        <Style x:Key="pbarCircularStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="SkyBlue"/>
            <Setter Property="BorderBrush" Value="SkyBlue"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Maximum" Value="100"/>
            <Setter Property="Height" Value="90"/>
            <Setter Property="Width" Value="90"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="26" Foreground="DarkGray"
                            Text="{TemplateBinding Value, Converter={StaticResource dblToPct}}"/>
                            <local:CircularProgress Stroke="{TemplateBinding Foreground}" Value="{TemplateBinding Value}"/>
                            <Button Name="StopRestartButton" Width="70" Height="70" Style="{StaticResource CircleButton}" Visibility="Collapsed" FontSize="15" Foreground="White" Click="StopRestartButtonClick"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="MouseEnter" Handler="ProgressBarMouseEnter" />
            <EventSetter Event="MouseLeave" Handler="ProgressBarMouseLeave" />
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="55"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="160"/>
        </Grid.ColumnDefinitions>
        <ListView BorderBrush="LightGray" Name="lvComparisonDetails" Margin="5,5,0,0"  Grid.Row="0" Grid.RowSpan="6" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Path=AllComparisonDetails}" SelectionChanged="ListViewItemSelected">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Open Master original file" Click="MenuItemOpenMasterClick"/>
                    <MenuItem Header="Open Test original file" Click="MenuItemOpenTestClick"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border Name="BorderListItem" MaxWidth="1200" BorderThickness="1" BorderBrush="LightGray" Margin="5" >
                        <Grid Name="ItemGrid" Height="150" AutomationProperties.Name="{Binding ComparisonId}" HorizontalAlignment="Stretch">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="25"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!--comparison number-->
                                <Grid Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="25" Width="25" Margin="5">
                                    <Ellipse Stroke="DarkGray" Fill="DarkGray" StrokeThickness="2"/>
                                    <Label Name="lbl" Foreground="White" Content="{Binding Path=ComparisonId}" Padding="5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                                <!--status block-->
                                    <Button Name="btnViewResult" Grid.Column="0" Grid.Row="1" Content="View Result" Height="20" Width="70" HorizontalAlignment="Center" VerticalAlignment="Top" Click="ButtonViewResult">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                            <Setter Property="FontSize" Value="10" />
                                            <Setter Property="Background" Value="#FF20C520"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True"/>
                                                        <Condition Binding="{Binding Path=Status}" Value="Failed"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True"/>
                                                        <Condition Binding="{Binding Path=Status}" Value="Passed"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <TextBlock Name="TextBlockStatus" Grid.Row="2" Grid.Column="0" Text="{Binding Path=Status, NotifyOnTargetUpdated=True}" VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="15" TargetUpdated="TextBlockStatusTargetUpdated">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Status}" Value="Queued" >
                                                    <Setter Property="Foreground" Value="DarkGray"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=Status}" Value="Executing" >
                                                    <Setter Property="Foreground" Value="Orange"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=Status}" Value="Error" >
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=Status}" Value="Failed" >
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=Status}" Value="Passed" >
                                                    <Setter Property="Foreground" Value="Green"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=Status}" Value="Canceling" >
                                                    <Setter Property="Foreground" Value="Orange"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=Status}" Value="Canceled" >
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <Button Name ="btnOpenFolder" Grid.Column="0" Grid.Row="3" Content="Open Folder" Height="20" Width="70" VerticalAlignment="Top" HorizontalAlignment="Center" Click="ButtonOpenFolder">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                            <Setter Property="FontSize" Value="10" />
                                            <Setter Property="Background" Value="#E59400"/>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <!--progress-->
                                <ProgressBar Grid.Row="0" Grid.Column="1" Grid.RowSpan="4" Margin="0,20,0,0" Style="{DynamicResource pbarCircularStyle}" Value="{Binding Progress}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                               <!--result table-->
                                <StackPanel Grid.Row="0" Grid.RowSpan="4" Grid.Column="2" Margin="25,40,0,0" HorizontalAlignment="Stretch">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="250" MinWidth="150"/>
                                            <ColumnDefinition Width="*" MinWidth="100"/>
                                            <ColumnDefinition Width="*" MinWidth="100"/>
                                            <ColumnDefinition Width="*" MinWidth="100"/>
                                            <ColumnDefinition Width="*" MinWidth="100"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="File Name" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="Rows Count" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                                        <TextBlock Grid.Row="0" Grid.Column="2" Text="Actual Rows Diff" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="0" Grid.Column="3" Text="Deviations" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="0" Grid.Column="4" Text="Extra Rows" HorizontalAlignment="Left" />
                                        <Separator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" VerticalAlignment="Bottom" Height="5" Margin="0,0,5,0">
                                            <Separator.Background>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1.0,0.5">
                                                    <GradientStop Color="DarkSlateBlue" Offset="0.0"/>
                                                    <GradientStop Color="SkyBlue" Offset="1.0"/>
                                                </LinearGradientBrush>
                                            </Separator.Background>
                                        </Separator>
                                        <GridSplitter Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Left" Margin="0,0,2,0" Grid.Row="0" Width="2" Background="LightGray"/>
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding MasterFileName}" Foreground="DarkSlateBlue" FontSize="15" Padding="0,0,0,3" FontWeight="DemiBold" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding TestFileName}" Foreground="DarkSlateBlue" FontSize="15" Padding="0,0,0,3" FontWeight="DemiBold" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding MasterRowsCount, StringFormat={}{0:N0}}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" FontWeight="DemiBold"/>
                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding TestRowsCount, StringFormat={}{0:N0}}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" FontWeight="DemiBold"/>
                                        <TextBlock Grid.Row="1" Grid.Column="2" Grid.RowSpan ="2"  Text="{Binding ActualRowsDiff, StringFormat={}{0:N0}}" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="DemiBold"/>
                                        <TextBlock Grid.Row="1" Grid.Column="3" Grid.RowSpan ="2" Text="{Binding RowsWithDeviations, StringFormat={}{0:N0}}" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="DemiBold"/>
                                        <TextBlock Grid.Row="1" Grid.Column="4" Text="{Binding ExtraMasterCount, StringFormat={}{0:N0}}" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="DemiBold" />
                                        <TextBlock Grid.Row="2" Grid.Column="4" Text="{Binding ExtraTestCount, StringFormat={}{0:N0}}" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="DemiBold"/>
                                    </Grid>
                                </StackPanel>
                                   <!--close button-->
                                <Button Grid.Row="0" Grid.Column="3" Margin="5" Style="{StaticResource NavButtton}" Content="&#xE711;" HorizontalAlignment="Right" VerticalAlignment="Top" Click="ButtonDeleteComparisonTaskClick"/>
                                <Separator Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="7" Margin="5,0,5,0" VerticalAlignment="Top" Height="5" Background="LightGray"/>
                                <!--time-->
                                <Label Grid.Row="4" Grid.Column="0" Content="{Binding StartTime}" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="12" Foreground="DarkGray"/>
                                <Label Grid.Row="4" Grid.Column="1" Content="{Binding ElapsedTime}" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="12" Foreground="DarkGray"/>
                                <Label Grid.Row="4" Grid.Column="2" Margin="20,0,0,0" Content="{Binding DeviationsView}" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontSize="12" Foreground="DarkGray"/>
                                <Label Grid.Row="4" Grid.Column="2" Margin="195,0,0,0" Content="{Binding ResultFileView}" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontSize="12" Foreground="DarkGray"/>
                            </Grid>
                        </Grid>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Opacity="0.2"/>
                        </Border.Effect>
                        <Border.Background>
                            <SolidColorBrush Color="White"></SolidColorBrush>
                        </Border.Background>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <TextBlock Name ="WelcomeTextBlock" Foreground="DarkGray" HorizontalAlignment="Center" FontFamily="Segoe UI" FontSize="30" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0"/>
        <TextBox Grid.Row="0" Grid.Column="2" Name="TextBoxSearchFile" Width="150" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" TextChanged="TextBoxSearchFileTextChanged"/>
        <GroupBox Header="Deviations View" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Margin="5,10,5,0" Height="60" VerticalAlignment="Top">
            <StackPanel>
                <RadioButton Name="LinearDeviationsView" Content="Linear" FontFamily="Segoe UI" ToolTip="Will be applied to the next comparison" IsChecked="True" Checked="LinearDeviationsView_Checked"/>
                <RadioButton Name="TabularDeviationsView" Content="Tabular" FontFamily="Segoe UI" ToolTip="Will be applied to the next comparison" Checked="TabularDeviationsView_Checked"/>
            </StackPanel>
        </GroupBox>
        <GroupBox Header="Result View" Grid.Row="2" Grid.RowSpan="3" Grid.Column="1" Margin="5,35,5,0" Height="60" VerticalAlignment="Top">
            <StackPanel>
                <RadioButton Name="DeviationsOnly" Content="Deviations Only" FontFamily="Segoe UI" ToolTip="Will be applied to the next comparison" IsChecked="True" Checked="DeviationsOnly_Checked"/>
                <RadioButton Name="DeviationsAndPassed" Content="Deviations and Passed" FontFamily="Segoe UI" ToolTip="Will be applied to the next comparison" Checked="DeviationsAndPassed_Checked"/>
            </StackPanel>
        </GroupBox>
        <Button Name ="btnOpenFiles" Grid.Row="4" Grid.Column="1" Height="25" Width="80" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin ="0,0,0,0" Content="Open Files" Click="ButtonOpenFilesClick"/>
    </Grid>
</Page>
